name: Fix Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Release version to fix'
        required: true

jobs:
  fix:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0      
        fetch-tags: true     
    - name: Fetch full history to access previous commits/tags
      run: |
        git fetch --no-tags
        git fetch origin '+refs/tags/*:refs/tags/*'
    - name: Use Node.js 22
      uses: actions/setup-node@v2
      with:
        node-version: '22'
    - run: npm ci
    - run: npm run lint
    - run: npm run test
    - name: Build Docker image
      run: npm run build:docker
    - name: Login to Yandex Cloud Container Registry
      env:
        YC_OAUTH_TOKEN: ${{ secrets.YC_OAUTH_TOKEN }}
        CR_REGISTRY: ${{ secrets.YC_CR_REGISTRY_ID }}
      run: echo ${{ env.YC_OAUTH_TOKEN }} | docker login --username oauth --password-stdin cr.yandex/${{ env.CR_REGISTRY }}
    - name: Push Docker image
      env:
        CR_REGISTRY: ${{ secrets.YC_CR_REGISTRY_ID }}
        RELEASE_VERSION: ${{ github.event.inputs.release_version }}
        FIX_NUMBER: ${{ github.run_number }}
      run: |
        docker tag shri-infra cr.yandex/${{ env.CR_REGISTRY }}/app:${{ env.RELEASE_VERSION }}_fix${{ env.FIX_NUMBER }}
        docker tag shri-infra cr.yandex/${{ env.CR_REGISTRY }}/app:${{ env.RELEASE_VERSION }}_latest
        docker push cr.yandex/${{ env.CR_REGISTRY }}/app:${{ env.RELEASE_VERSION }}_fix${{ env.FIX_NUMBER }}
        docker push cr.yandex/${{ env.CR_REGISTRY }}/app:${{ env.RELEASE_VERSION }}_latest
    - name: Determine commits, author, date
      run: |
        PREV_TAG=$(git describe --tags --abbrev=0 HEAD^)
        COMMITS=$(git log $PREV_TAG..HEAD --pretty=format:'- %h %s' --no-merges)
        AUTHOR=$(git log -1 --pretty=format:'%an')
        DATE=$(git log -1 --pretty=format:'%ad' --date=iso)
        echo "PREV_TAG=$PREV_TAG" >> $GITHUB_ENV
        echo "COMMITS<<EOF" >> $GITHUB_ENV
        echo "$COMMITS" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV
        echo "AUTHOR=$AUTHOR" >> $GITHUB_ENV
        echo "DATE=$DATE" >> $GITHUB_ENV
  
    - name: Add issue comment
      env:
        ISSUE: ${{ steps.<previous>.outputs.issue_number }}
        FIX_NUMBER: ${{ github.run_number }}
      run: |
        COMMENT="Fix #$FIX_NUMBER applied
        Date: $DATE
        Author: $AUTHOR
        
        Commits since $PREV_TAG:
            $COMMITS"
                  gh issue comment $ISSUE --body "$COMMENT"
