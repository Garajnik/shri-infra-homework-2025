name: Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Use Node.js 22
      uses: actions/setup-node@v2
      with:
        node-version: '22'
    - run: npm ci
    - run: npm run lint
    - run: npm run test
    - name: Create release branch
      run: git checkout -b releases/${{ github.run_number }}
    - name: Build Docker image
      run: npm run build:docker
    - name: List Docker images
      run: docker images
    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq
    - name: Get IAM Token
      env:
        YC_SA_JSON_CREDENTIALS: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
      run: |
        IAM_TOKEN=$(curl -s -H "Metadata-Flavor: Google" -d "$YC_SA_JSON_CREDENTIALS" https://iam.api.cloud.yandex.net/iam/v1/tokens | jq -r '.iamToken')
        echo "IAM_TOKEN=$IAM_TOKEN" >> $GITHUB_ENV
    - name: Login to Yandex Cloud Container Registry
      env:
        CR_REGISTRY: ${{ secrets.YC_CR_REGISTRY_ID }}
        IAM_TOKEN: ${{ env.IAM_TOKEN }}
      run: echo $IAM_TOKEN | docker login --username iam --password-stdin cr.yandex/$CR_REGISTRY
    - name: Push Docker image
      env:
        CR_REGISTRY: ${{ secrets.YC_CR_REGISTRY_ID }}
        RELEASE_VERSION: ${{ github.run_number }}
      run: |
        if docker image inspect shri-infra >/dev/null 2>&1; then
          docker tag shri-infra cr.yandex/$CR_REGISTRY/app:$RELEASE_VERSION
          docker tag shri-infra cr.yandex/$CR_REGISTRY/app:$RELEASE_VERSION_latest
          docker push cr.yandex/$CR_REGISTRY/app:$RELEASE_VERSION
          docker push cr.yandex/$CR_REGISTRY/app:$RELEASE_VERSION_latest
        else
          echo "Error: Docker image shri-infra does not exist"
          exit 1
        fi
    - name: Create Issue
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_VERSION: ${{ github.run_number }}
      run: |
        gh issue create --title "Release $RELEASE_VERSION" --body "Release details..."
    - name: Update CHANGELOG
      env:
        RELEASE_VERSION: ${{ github.run_number }}
      run: |
        echo "## [v$RELEASE_VERSION]" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        git add CHANGELOG.md
        git commit -m "Update CHANGELOG for release $RELEASE_VERSION"
        git push origin releases/$RELEASE_VERSION
