name: Release

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get previous tag
        run: echo "PREVIOUS_TAG=$(git describe --abbrev=0 --tags)" >> $GITHUB_ENV

      - name: Generate commits list
        run: git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%h)" > /tmp/commits.md

      - name: Generate changelog entry
        run: |
          echo "## [v${{ github.run_number }}] - $(date +%Y-%m-%d)" > /tmp/changelog/entry.md
          cat /tmp/commits.md >> /tmp/changelog/entry.md
          echo "" >> /tmp/changelog/entry.md

      - name: Update CHANGELOG.md
        run: |
          cat /tmp/changelog/entry.md CHANGELOG.md > CHANGELOG.md.new
          mv CHANGELOG.md.new CHANGELOG.md

      - name: Commit and push CHANGELOG update
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG for v${{ github.run_number }}"
          git push origin main

      - name: Create release tag
        run: |
          git tag v${{ github.run_number }}
          git push origin v${{ github.run_number }}

      - name: Use Node.js 22
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      - run: npm ci
      - run: npm run lint
      - run: npm run test

      - name: Create release branch
        run: git checkout -b releases/${{ github.run_number }}

      - name: Build Docker image
        env:
          CR_REGISTRY: ${{ secrets.YC_CR_REGISTRY_ID }}
          RELEASE_VERSION: ${{ github.run_number }}
        run: docker build -t cr.yandex/${{ env.CR_REGISTRY }}/app:${{ env.RELEASE_VERSION }} -t cr.yandex/${{ env.CR_REGISTRY }}/app:${{ env.RELEASE_VERSION }}_latest .

      - name: Login to Yandex Cloud Container Registry
        env:
          YC_OAUTH_TOKEN: ${{ secrets.YC_OAUTH_TOKEN }}
          CR_REGISTRY: ${{ secrets.YC_CR_REGISTRY_ID }}
        run: echo ${{ env.YC_OAUTH_TOKEN }} | docker login --username oauth --password-stdin cr.yandex/${{ env.CR_REGISTRY }}

      - name: Push Docker image
        env:
          CR_REGISTRY: ${{ secrets.YC_CR_REGISTRY_ID }}
          RELEASE_VERSION: ${{ github.run_number }}
        run: |
          docker push cr.yandex/${{ env.CR_REGISTRY }}/app:${RELEASE_VERSION}
          docker push cr.yandex/${{ env.CR_REGISTRY }}/app:${RELEASE_VERSION}_latest

      - name: Generate issue content
        run: |
          echo "Release Information" > issue.md
          echo "" >> issue.md
          echo "Date: $(date +%Y-%m-%d)" >> issue.md
          echo "Author: ${{ github.actor }}" >> issue.md
          echo "Version: ${{ github.run_number }}" >> issue.md
          echo "" >> issue.md
          echo "Commits:" >> issue.md
          cat /tmp/commits.md >> issue.md
          echo "" >> issue.md
          echo "Docker Image: cr.yandex/${{ secrets.YC_CR_REGISTRY_ID }}/app:${{ github.run_number }}" >> issue.md

      - name: Create Issue
        uses: peter-evans/create-issue-from-file@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: "Release v${{ github.run_number }}"
          content-filepath: ./issue.md
          labels: |
            release
